<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.3 on 2014-09-13 -->

<plugin>
  <name>Maven Plugin to import confman parameters values in a project</name>
  <description></description>
  <groupId>com.ninjamind</groupId>
  <artifactId>confman-maven-plugin</artifactId>
  <version>1.0-SNAPSHOT</version>
  <goalPrefix>confman</goalPrefix>
  <mojos>
    <mojo>
      <goal>display-properties</goal>
      <description>This plugin is used to display Confman properties in console</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>initialize</phase>
      <executePhase>initialize</executePhase>
      <executeGoal>display-properties</executeGoal>
      <implementation>com.ninjamind.maven.plugin.DisplayConfmanPropertiesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>app</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Application code</description>
        </parameter>
        <parameter>
          <name>env</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Environment code</description>
        </parameter>
        <parameter>
          <name>instance</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Instance code</description>
        </parameter>
        <parameter>
          <name>port</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Confman server port (efault 8080)</description>
        </parameter>
        <parameter>
          <name>server</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Confman server</description>
        </parameter>
        <parameter>
          <name>version</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Version number</description>
        </parameter>
      </parameters>
      <configuration>
        <port implementation="java.lang.Integer" default-value="8080"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>This plugin is used to display help for all the sub plugins</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>initialize</phase>
      <executePhase>initialize</executePhase>
      <executeGoal>help</executeGoal>
      <implementation>com.ninjamind.maven.plugin.DisplayConfmanHelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters/>
    </mojo>
    <mojo>
      <goal>write-properties</goal>
      <description>This plugin is used to display Confman properties in console</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>initialize</phase>
      <executePhase>initialize</executePhase>
      <executeGoal>write-properties</executeGoal>
      <implementation>com.ninjamind.maven.plugin.WriteConfmanPropertiesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>app</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Application code</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The encoding to use when storing the properties (default is ${project.build.sourceEncoding})</description>
        </parameter>
        <parameter>
          <name>env</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Environment code</description>
        </parameter>
        <parameter>
          <name>instance</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Instance code</description>
        </parameter>
        <parameter>
          <name>port</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Confman server port (efault 8080)</description>
        </parameter>
        <parameter>
          <name>propertiespath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path where properties files will be created (default is ${basedir}/src/main/filters/ in basedir)</description>
        </parameter>
        <parameter>
          <name>propertiesprefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Prefix of the properties file (default is filter-). After this prefix the plugin add the environment code and instance code if instance is an argument. For exemple is you define env=DEV and instance=MyServer1 the default name will be
    filter-dev-myserver1.properties
</description>
        </parameter>
        <parameter>
          <name>server</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Confman server</description>
        </parameter>
        <parameter>
          <name>version</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Version number</description>
        </parameter>
      </parameters>
      <configuration>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}"/>
        <port implementation="java.lang.Integer" default-value="8080"/>
        <propertiespath implementation="java.lang.String" default-value="${basedir}/src/main/filters/"/>
        <propertiesprefix implementation="java.lang.String" default-value="filter-"/>
      </configuration>
    </mojo>
  </mojos>
</plugin>